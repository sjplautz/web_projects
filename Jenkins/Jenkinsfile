pipeline{
    agent any

    // allow the build to accept parameters to enhance pipeline flexibility
    // parameters{
        // paramType(option1: "val", option2: "val", optionN: "val")
    //}

    // make build tools available to the pipeline
    // tools{
        // <tool> <tool name in jenkins tools>
        // gradle Gradle
        // whatever other supported tools
    //}

    // configure the build options for this pipeline
    options{
        // only keep record of last 5 pipeline builds
        buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
    }

    // defining custom environment vars for global use in Jenkinsfile 
    environment {
        TEST_VAR = "true"
        CODE_CHANGES = getGitChanges()
        VERSION = calculateVersion()
        // SOME_CREDENTIAL = credentials('CREDENTIAL_ID')
        DOCKERHUB = credentials('docker_hub')
    }

    // defines the different stages (macro steps) of the pipeline
    stages {
        // stage for compiling and creating src code artefacts 
        stage("build-apps"){
            steps{
               echo "building application artefact" 
               echo "version number: ${VERSION}"
            }
        }

        stage("build-containers"){
            steps{
                echo "building containers for new artefacts"
            }
        }

        // stage for integration testing
        stage("test"){
            // only execute steps if these conditions are true
            when{
                expression{
                    // using jenkins default env vars for conditional
                    env.CODE_CHANGES == "true"
                }
            }
            steps{
                script{
                    // conditional step
                    if(env.TEST_VAR == "true"){
                        echo "testing the"
                    }
                }
                echo "application" 
            }
        }

        // stage for deploying containerized apps to app cluster
        stage("deploy"){
            steps{
               echo "deploying the application" 
               withCredentials([
                   sshUserPrivateKey(
                       credentialsId: 'master_key', 
                       keyFileVariable: 'SSH_KEYFILE', 
                       passphraseVariable: 'SSH_PASSPHRASE', 
                       usernameVariable: 'SSH_USERNAME')
               ]) {
                   echo "using credential entry master_key"
                   echo "user: ${SSH_USERNAME}, privkey: ${SSH_KEYFILE}, passphrase: ${SSH_PASSPHRASE}"
               }
            }
        }
    }

    // steps to perform after all the stages are complete
    post{
        always {
            echo "I'm done building"
        }

        success {
            echo "the build succeeded!"
        }
        
        failure {
            echo "the build did not succeed"
        }
    }
}

// groovy script to check if code has changed
def getGitChanges(){
    return "true"
}

// calculates the verion number for (jenkinsfile or apps?)
def calculateVersion(){
    return 1.1
}
